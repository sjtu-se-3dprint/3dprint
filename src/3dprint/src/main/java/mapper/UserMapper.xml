<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.UserMapper" >

	<select id="findUserByName" resultType="map">
		select * from user 
		where name=#{name}
		  <if test="status!=null">and status=#{status}</if>
	</select>
	
	<select id="findUserById" resultType="map">
		select * from user 
		where user_id=#{user_id}
		  <if test="status!=null">and status=#{status}</if>
	</select>
	
	
	
	<update id="modifyUserInfo">
		update user
		set updatetime=now()
		<if test="email!=null">, email=#{email}</if>
		<if test="telephone!=null">, telephone=#{telephone}</if>
		<if test="qq!=null">, qq=#{qq}</if>
		where user_id=#{user_id}
	</update>
	
	<update id="modifyPassword">
		update user
		set password=#{newPassword},
			updatetime=now()
		where user_id=#{user_id}
	</update>
	
	<update id="removeUserById">
		update user
		set status="deleted",
			updatetime=now()
		where user_id=#{user_id}
		  and status=#{status}
	</update>
	
	<update id="resumeUserById">
		update user
		set status="normal",
			updatetime=now()
		where user_id=#{user_id}
		  and status=#{status}
	</update>
	
	<insert id="addPlainUser" useGeneratedKeys="true" keyProperty="user_id">
		insert into user(name, password)
		values(#{name},
			   #{password});
	</insert>
	
	<insert id="addRoleForUser" useGeneratedKeys="true" keyProperty="user_id">
		insert into authentication(user_id, user_role_id)
		values(#{user_id},
			   (select user_role_id
			   from user_role
			   where user_role_name=#{user_role_name}
			   		and status="normal"));
	</insert>
	
	<select id="findUserRolesByUserId" resultType="map">
		select B.user_role_name 
		from authentication A, user_role B 
		where A.user_id=#{user_id}
		  and A.user_role_id=B.user_role_id
		  and A.status = #{status}
		  and B.status = #{authentication_status}
	</select>
	
	<select id="queryPlainUserList" resultType="map">
		select * from
			(select A.*, C.user_role_name, count(*) as num from user A, authentication B, user_role C
			 where A.status = #{status} and B.status = #{authentication_status} and C.status = #{user_role_status}
		       and A.user_id = B.user_id 
			   and B.user_role_id =  C.user_role_id group by name) as temp
		where num=1 and user_role_name='ROLE_USER' order by user_id;

	</select>
	
	
	<insert id="add" useGeneratedKeys="true" keyProperty="id"
		parameterType="map">
		insert into user(userName, userAge, userAddress) values(
			#{userName},
			#{userAge},
			#{userAddress}
		);
	</insert>
</mapper>